apiVersion: helm.cattle.io/v1
kind: HelmChart
metadata:
  name: vault
  namespace: kube-system
spec:
  repo: https://helm.releases.hashicorp.com
  chart: vault
  targetNamespace: default
  valuesContent: |-
    injector:
      metrics:
        enabled: true
      image:
        tag: "latest"
      agentImage:
        tag: "latest"
    server:
      image:
        tag: "latest"
      ingress:
        enabled: true
        hosts:
        - name: vault.buc.sh
          path: /
        - name: vault.10.0.0.16.nip.io
          path: /
      extraSecretEnvironmentVars:
      - envName: AWS_ACCESS_KEY_ID
        secretName: vault-s3
        secretKey: access_key
      - envName: AWS_SECRET_ACCESS_KEY
        secretName: vault-s3
        secretKey: secret_key
      dataStorage:
        enabled: false
      standalone:
        config: |
          ui = true
          listener "tcp" {
            tls_disable = 1
            address = "[::]:8200"
            cluster_address = "[::]:8201"
            # Enable unauthenticated metrics access (necessary for Prometheus Operator)
            telemetry {
              unauthenticated_metrics_access = "true"
            }
          }
          # storage "s3" {
          #   bucket = "vault"
          #   endpoint = "http://s3.buc.sh:9000"
          #   region = "minio"
          #   s3_force_path_style = "true"
          #   disable_ssl = "true"
          # }
          storage "file" {
            path = /tmp/vault
          }
          # Example configuration for using auto-unseal, using Google Cloud KMS. The
          # GKMS keys must already exist, and the cluster must have a service account
          # that is authorized to access GCP KMS.
          #seal "gcpckms" {
          #   project     = "vault-helm-dev"
          #   region      = "global"
          #   key_ring    = "vault-helm-unseal-kr"
          #   crypto_key  = "vault-helm-unseal-key"
          #}
          # Example configuration for enabling Prometheus metrics in your config.
          telemetry {
            prometheus_retention_time = "30s",
            disable_hostname = true
          }
      