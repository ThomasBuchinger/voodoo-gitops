# source: https://github.com/dexidp/dex/blob/master/examples/k8s/dex.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: dex
  name: dex
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dex
  template:
    metadata:
      labels:
        app: dex
    spec:
      serviceAccountName: dex # This is created below
      containers:
      - image: ghcr.io/dexidp/dex:v2.43.1
        name: dex
        command: ["/usr/local/bin/docker-entrypoint", "dex", "serve", "/etc/dex/cfg/config.yaml"]
        

        ports:
        - name: http
          containerPort: 5556

        volumeMounts:
        - name: config
          mountPath: /etc/dex/cfg
        # - name: tls
        #   mountPath: /etc/dex/tls

        env:
        # HomeLA standard Admin password
        - name: USER_ADMIN_HASH
          value: $2a$10$C8QN1YJaoW/.L6bBSV/k1ucgA5Wm68JkyHPyyT8/Lke.UjwAaf73y
        readinessProbe:
          httpGet:
            path: /healthz
            port: 5556
      volumes:
      - name: config
        configMap:
          name: dex
          items:
          - key: config.yaml
            path: config.yaml
      # - name: tls
      #   secret:
      #     secretName: cert-dex-buc-sh

---
apiVersion: v1
kind: Service
metadata:
  name: dex
  namespace: default
spec:
  type: ClusterIP
  ports:
  - name: dex
    port: 5556
    protocol: TCP
    targetPort: 5556
  selector:
    app: dex
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: dex
  name: dex
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: dex
rules:
- apiGroups: ["dex.coreos.com"]
  resources: ["*"]
  verbs: ["*"]
- apiGroups: ["apiextensions.k8s.io"]
  resources: ["customresourcedefinitions"]
  verbs: ["create"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: dex
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: dex
subjects:
- kind: ServiceAccount
  name: dex
  namespace: default

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: dex
  namespace: default
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod-cloudflare-dns
spec:
  tls:
  - hosts:
    - dex.buc.sh
    secretName: cert-dex-console-buc-sh
  rules:
  - host: dex.buc.sh
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: dex
            port:
              name: dex

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: dex-http
  namespace: default
spec:
  rules:
  - host: dex.10.0.0.16.nip.io
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: dex
            port:
              name: dex

