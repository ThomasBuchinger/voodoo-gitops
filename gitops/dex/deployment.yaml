# source: https://github.com/dexidp/dex/blob/master/examples/k8s/dex.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: dex
  name: dex
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dex
  template:
    metadata:
      labels:
        app: dex
    spec:
      serviceAccountName: dex # This is created below
      containers:
      - image: ghcr.io/dexidp/dex:v2.32.0
        name: dex
        command: ["/usr/local/bin/docker-entrypoint", "dex", "serve", "/etc/dex/cfg/config.yaml"]
        

        ports:
        - name: http
          containerPort: 5556

        volumeMounts:
        - name: config
          mountPath: /etc/dex/cfg
        # - name: tls
        #   mountPath: /etc/dex/tls

        env:
        - name: LOGIN_CLIENT_SECRET
          value: ZXhhbXBsZS1hcHAtc2VjcmV0
        - name: USER_ADMIN_HASH
          # bcrypt hash of the string "password": $(echo password | htpasswd -BinC 10 admin | cut -d: -f2)
          value: $2y$10$Kr7cetzV3sTV6VEGncfnXOG0HY2Iq34CpQJYuHKC7siSYfC04VvJW
        # - name: GITHUB_CLIENT_ID
        #   valueFrom:
        #     secretKeyRef:
        #       name: github-client
        #       key: client-id
        # - name: GITHUB_CLIENT_SECRET
        #   valueFrom:
        #     secretKeyRef:
        #       name: github-client
        #       key: client-secret

        readinessProbe:
          httpGet:
            path: /healthz
            port: 5556
      volumes:
      - name: config
        configMap:
          name: dex
          items:
          - key: config.yaml
            path: config.yaml
      # - name: tls
      #   secret:
      #     secretName: cert-dex-buc-sh
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: dex
  namespace: default
data:
  config.yaml: |
    issuer: https://dex.buc.sh
    storage:
      type: kubernetes
      config:
        inCluster: true
    web:
      http: 0.0.0.0:5556
      # tlsCert: /etc/dex/tls/tls.crt
      # tlsKey: /etc/dex/tls/tls.key
    connectors: []
    
    oauth2:
      skipApprovalScreen: true

    staticClients:
    - id: login
      name: "SSO Login Applications"
      public: true
      # secret: "{{ .Env.LOGIN_CLIENT_SECRET }}"
      redirectURIs:
      - 'http://127.0.0.1:5555/callback'
      - 'http://argocd.10.0.0.23.nip.io/callback'
      - 'http://homelab-console.10.0.0.23.nip.io/callback'

    enablePasswordDB: true
    staticPasswords:
    - email: "admin@buc.sh"
      username: "admin"
      userID: "08a8684b-db88-4b73-90a9-3cd1661f5466"
      hash: "{{ .Env.USER_ADMIN_HASH }}"
---
apiVersion: v1
kind: Service
metadata:
  name: dex
  namespace: default
spec:
  type: ClusterIP
  ports:
  - name: dex
    port: 5556
    protocol: TCP
    targetPort: 5556
    nodePort: 32000
  selector:
    app: dex
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: dex
  name: dex
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: dex
rules:
- apiGroups: ["dex.coreos.com"]
  resources: ["*"]
  verbs: ["*"]
- apiGroups: ["apiextensions.k8s.io"]
  resources: ["customresourcedefinitions"]
  verbs: ["create"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: dex
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: dex
subjects:
- kind: ServiceAccount
  name: dex
  namespace: default